<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true">
    <springProperty scope="context" name="projectName" source="spring.application.name"/>
    <!-- name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义后，可以使“${}”来使用变量。 -->
    <property name="log.path" value="/opt/zuul/logs/"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 %hostname-->
            <pattern>
                <!--[%d{yyyy-MM-dd HH:mm:ss.SSS}][%|${PID:-}][%thread|${app_name:-}][%X{X-B3-TraceId:-}][%X{X-B3-SpanId:-}][%X{X-Span-Export:-}][%class{36}.%method{20}-%line|%msg%n"/>-->
                [%d{yyyy-MM-dd HH:mm:ss:SSS}][${projectName}][%level][%c.%M]\(%L\) : --==-- %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
                <!--[%d{yyyy-MM-dd HH:mm:ss:SSS}][runxsports-mat][%highlight(%-5level)] [] %clr(${PID:- }) [%c.%M]\(%L\) : &#45;&#45; %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}-->
            </pattern>
        </encoder>
    </appender>

    <!-- 日志输出文件，时间滚动输出 -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文档的路径及文档名 -->
        <file>${log.path}/${projectName}.info.log</file>
        <!--日志文档输出格式 -->
        <encoder>
            <pattern>[%X{REQUEST_ID}] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${log.path}/${projectName}-%d{yyyy-MM-dd}.%i.info.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文档保留天数 -->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
    </appender>


    <!-- 日志输出文件，时间滚动输出 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文档的路径及文档名 -->
        <file>${log.path}/${projectName}.error.log</file>
        <!--日志文档输出格式 -->
        <encoder>
            <pattern>[%X{REQUEST_ID}] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${log.path}/${projectName}-%d{yyyy-MM-dd}.%i.error.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文档保留天数 -->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>
    <logger name="org.springframework" level="info"/>
    <logger name="baseLogger" additivity="false">
        <level value="info"/>
    </logger>
    <!-- 日志输出级别 -->
    <root level="info">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="INFO_FILE"/>
        <appender-ref ref="ERROR_FILE"/>
    </root>
</configuration>